class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        string res = "";
        int i=0,j=0;
        for(char c:lcs(str1,str2))
        {
            while(str1[i]!=c)
            {
                res += str1[i++];
            }
            while(str2[j]!=c)
            {
                res += str2[j++];
            }
            res += c,i++,j++;
        }
        return res + str1.substr(i) + str2.substr(j);
    }

    string lcs(string a, string b)
    {
        int n = a.size(), m = b.size();
        vector<vector<string>> dp(n+1,vector<string>(m+1,""));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(a[i]==b[j])
                dp[i+1][j+1] = dp[i][j] + a[i];
                else
                dp[i+1][j+1] = dp[i+1][j].size() > dp[i][j+1].size() ? dp[i+1][j] : dp[i][j+1];
            }
        }
        return dp[n][m];
    }
};
